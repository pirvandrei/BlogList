{"version":3,"sources":["components/Blog.js","components/Footer.js","components/Notification.js","components/BlogForm.js","components/Togglable.js","components/LoginForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","useState","details","setDetails","className","target","href","url","title","author","onClick","user","name","likes","Footer","style","color","fontStyle","fontSize","Notification","props","message","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","onSubmit","event","preventDefault","value","onChange","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","LoginForm","handleSubmit","username","setUsername","password","setPassword","token","getAll","a","config","headers","Authorization","axios","get","response","data","create","newObject","post","update","id","put","then","setToken","newToken","login","credentials","App","blogs","setBlogs","notificationMessage","setNotificationMessage","notificationType","setNotificationType","setUser","blogFormRef","useRef","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","setTimeout","addBlog","blogObject","current","returnedBlog","concat","handleLogin","userObject","loginService","setItem","stringify","loginForm","removeItem","map","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec67ecd6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nconst Blog = ({ blog }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  };\r\n\r\n  const [details, setDetails] = useState(false);\r\n\r\n\r\n  return (\r\n    <div className=\"blog\">\r\n      <a target=\"_blank\" href={blog.url}>\r\n        {blog.title} by {blog.author}\r\n      </a>\r\n\r\n      <button onClick={() => setDetails(!details)}>\r\n                     {details ? 'hide' : 'show'}\r\n                </button>\r\n\r\n      {details === false ? '' :\r\n      <div>\r\n        <p>added by {blog.user === null ? '' : blog.user.name}</p>\r\n        <p>likes {blog.likes === null ? '' : blog.likes}</p>\r\n        <p>url {blog.url}</p>\r\n      </div>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>BlogList app, from Andrei to Andrei</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n  if (props.message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={props.type}>{props.message}</div>;\r\n};\r\n\r\nexport default Notification","import React, { useState } from 'react';\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setNewTitle] = useState('title...');\r\n  const [newAuthor, setNewAuthor] = useState('author...');\r\n  const [newUrl, setNewUrl] = useState('url...');\r\n\r\n  const handleBlogAuthorChange = (event) => {\r\n    setNewAuthor(event.target.value);\r\n  };\r\n\r\n  const handleBlogTitleChange = (event) => {\r\n    setNewTitle(event.target.value);\r\n  };\r\n\r\n  const handleBlogUrlChange = (event) => {\r\n    setNewUrl(event.target.value);\r\n  };\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault();\r\n\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    });\r\n\r\n    setNewTitle('');\r\n    setNewAuthor('');\r\n    setNewUrl('');\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new blog</h2>\r\n\r\n      <form onSubmit={addBlog}>\r\n        <input value={newAuthor} onChange={handleBlogAuthorChange} />\r\n        <input value={newTitle} onChange={handleBlogTitleChange} />\r\n        <input value={newUrl} onChange={handleBlogUrlChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogForm;\r\n","import React, { useState, useImperativeHandle } from 'react';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Togglable;\r\n","import React, { useState } from 'react';\r\n\r\nconst LoginForm = ({ handleSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const createUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    handleSubmit({\r\n      username,\r\n      password\r\n    });\r\n\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={createUser}>\r\n        <div>\r\n          username\r\n          <input value={username} onChange={handleUsernameChange} />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\nconst setToken =  (newToken) => {\n  token =  `bearer ${newToken}`;\n};\n\nconst get = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst getAll = async () => {\n  const config = { headers: { Authorization: token } };\n  const response = await axios.get(baseUrl, config);\n\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = { headers: { Authorization: token } };\n  const response = await axios.post(baseUrl, newObject, config);\n\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, setToken };\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Blog from './components/Blog';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport LoginForm from './components/LoginForm';\n\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [notificationType, setNotificationType] = useState('');\n  const [user, setUser] = useState(null);\n\n  const blogFormRef = useRef();\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  useEffect(async () => {\n    try {\n      const blogs = await blogService.getAll();\n      setBlogs(blogs);\n    } catch (e) {\n      setNotificationMessage(`Blog viewing failed with exception: ${e}`);\n      setNotificationType('error');\n\n      setTimeout(() => {\n        setNotificationMessage('');\n        setNotificationType('');\n      }, 5000);\n    }\n  }, []);\n\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility();\n\n    try {\n\n      const returnedBlog = await blogService.create(blogObject);\n\n      setBlogs(blogs.concat(returnedBlog));\n\n      setNotificationMessage(`Blog added with success`);\n      setNotificationType('success');\n\n      setTimeout(() => {\n        setNotificationMessage('');\n        setNotificationType('');\n      }, 5000);\n    } catch (exception) {\n      setNotificationMessage(\n        `Blog addition failed with exception: ${exception}`\n      );\n      setNotificationType('error');\n\n      setTimeout(() => {\n        setNotificationMessage('');\n        setNotificationType('');\n      }, 5000);\n    }\n  };\n\n  const handleLogin = async (userObject) => {\n\n    const username = userObject.username;\n    const password = userObject.password;\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      setUser(user);\n\n      setNotificationMessage(`Welcome in you dear ${user.name}`);\n      setNotificationType('success');\n\n      setTimeout(() => {\n        setNotificationMessage('');\n        setNotificationType('');\n      }, 5000);\n    } catch (exception) {\n      setNotificationMessage(`wrong user name or password`);\n      setNotificationType('error');\n      setTimeout(() => {\n        setNotificationMessage('');\n        setNotificationType('');\n      }, 5000);\n    }\n  };\n\n  \n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel=\"login\">\n        <LoginForm handleSubmit={handleLogin} />\n      </Togglable>\n    );\n  };\n\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  );\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedBlogAppUser');\n\n    setNotificationMessage(`Bye, ${user.name}`);\n    setNotificationType('success');\n\n    setTimeout(() => {\n      setNotificationMessage('');\n      setNotificationType('');\n    }, 5000);\n\n    blogService.setToken(null);\n    setUser(null);\n    loginForm();\n  };\n\n  return (\n    <div>\n      <h1>Blogs</h1>\n      <Notification message={notificationMessage} type={notificationType} />\n\n      {user === null ? \n        loginForm()\n       : \n        <div>\n          <p>\n            {user.name} logged in\n            <button onClick={() => logout()}> logout </button>\n          </p>\n          {blogForm()}\n        </div>\n      }\n\n      <ul>\n        {blogs.map((blog, i) => (\n          <Blog key={i} blog={blog} />\n        ))}\n      </ul>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}